EXPORT MAGNITUDE(x, y)
BEGIN
 RETURN âˆš(x^2+y^2);
END;

EXPORT ANGLE(x, y)
BEGIN
 IF x == 0 and y == 0 THEN
  RETURN 0;
 ELSE
  IF y > 0 THEN
   RETURN ACOS(x/MAGNITUDE(x,y));
  ELSE
   RETURN 360-ACOS(x/MAGNITUDE(x,y));
  END;
 END;
END;

EXPORT ROTATE(x, y, angle)
BEGIN
 LOCAL magnitude = MAGNITUDE(x, y),
       original_angle = ANGLE(x, y);
 RETURN {magnitude*COS(original_angle+angle), magnitude*SIN(original_angle+angle)};
END;

EXPORT VECTOR_SUM(vector_1, vector_2)
BEGIN
 RETURN {vector_1[1]+vector_2[1], vector_1[2]+vector_2[2]};
END;

EXPORT VECTOR_DIFFERENCE(vector_1, vector_2)
BEGIN
 RETURN {vector_2[1]-vector_1[1], vector_2[2]-vector_1[2]};
END;

EXPORT DRAW_SHAPE(vertices, lines, position, angle, shape_scale)
BEGIN
 FOR L FROM 1 TO length(lines) DO
  LOCAL line = lines[L];
  LOCAL point_1_index = line[1],
        point_2_index = line[2];
  LOCAL point_1 = vertices[point_1_index],
        point_2 = vertices[point_2_index];
  LOCAL point_1_rotated = ROTATE(point_1[1]*shape_scale, point_1[2]*shape_scale, angle),
        point_2_rotated = ROTATE(point_2[1]*shape_scale, point_2[2]*shape_scale, angle);
  LINE_P(point_1_rotated[1]+position[1], point_1_rotated[2]+position[2], point_2_rotated[1]+position[1], point_2_rotated[2]+position[2]);
 END;
END;

// this doesnt seem to work as a subprogram for some reason
// maybe due to not being able to change local (to the main program) variables?
EXPORT ARRAY_APPEND(array, new_stuff)
BEGIN
 array := CONCAT(array, {new_stuff});
END;